#+TITLE: Práctico Nro. 4.3: Excepciones
#+AUTHOR: Juan Jose Della Vecchia
#+STARTUP: overview

* Ejercicio 1:
Construya un programa que permita que transforme un string
a un número. Controle las situaciones de error usando excepciones.
#+begin_src python
s = input("Ingrese un string para convertirla a número: ")

try:
    print(f"El string convertido en numero es: {int(s)}")
except Exception as err:
    print(f"El string ingresado no se puede convertir a un número: {err}")
#+end_src

* Ejercicio 2:
Escriba un programa que permita insertar, modificar y eliminar
elementos de una lista. Controle la situaciones de error usando
excepciones.
#+begin_src python
lista = list(input("Ingrese una lista separando los elementos con comas: ").split(","))

ingreso_flag = True
while ingreso_flag:
    print(*[f"\n{i+1} - {lista[i]}" for i in range(len(lista))])
    opcion = input("Ingrese una opción I=Insertar, M=Modificar, E=Eliminar, F=Fin: ").lower()

    try:
        if opcion == "i":
            elem = input("Ingrese nuevo elemento: ")
            orden = int(input("En que posición lo inserta: "))
            lista.insert(orden-1, elem)

        elif opcion == "m":
            orden = int(input("Que elemento quiere modificar: "))
            elem = input("Ingrese nuevo valor: ")
            lista[orden-1] = elem

        elif opcion == "e":
            orden = int(input("Que elemento quiere eliminar: "))
            lista.remove(lista[orden-1])

        elif opcion == "f":
            ingreso_flag = False

    except Exception as err:
        print("Error: ", err)

print("La lista final es:")
print(*[f"\n{i+1} - {lista[i]}" for i in range(len(lista))])
#+end_src

* Ejercicio 3:
Escriba un programa que permita que el usuario ingrese una
lista de elementos. El programa debe sumar los elementos numéricos
que se encuentran en la lista. Cuando el programa encuentra un elemento
que no es numérico dispara una excepción ValueError la cual
tiene un manejador que inserta el elemento que provocó la excepción
en una lista de elementos no numéricos.
#+begin_src python
lista = list(input("Ingrese una lista separando los elementos con comas: ").split(","))

lista_nonum = []
suma = 0
for elem in lista:
    try:
        suma += float(elem)
    except ValueError:
        lista_nonum.append(elem)

print(f"La suma de los elementos numericos es: {suma}")
print(f"Los elementos no númericos ingresados son: {lista_nonum}")
#+end_src

* Ejercicio 4:
Escriba un programa que permita que el usuario cree un diccionario.
El programa permite: insertar, eliminar y modificar los elementos
del diccionario. Cuando se desea insertar un valor cuya clave ya existe el
programa dispara una excepción KeyError cuyo manejador pregunta al
usario si realmente desea modificar el valor. En caso afirmativo realiza
la modificación correspondiente. En caso negativo el programa no realiza
ninguna acción. El programa también debe manejar los errores por
intento de acceso al diccionarion y otros que puedan surgir utilizando
una clave incorrecta.
#+begin_src python
clave = ""
dicc = {}
while clave != "fin":
    clave = input("Ingrese la clave (fin para terminar): ")
    if clave != "fin":
        dicc[clave] = input(f"ingrese el valor de {clave}: ")
        
ingreso_flag = True
while ingreso_flag:
    print(*[f"\n{i} - {dicc[i]}" for i in dicc])
    opcion = input("Ingrese una opción I=Insertar, M=Modificar, E=Eliminar, F=Fin: ").lower()

    try:
        if opcion == "i":
            clave = input("Ingrese nueva clave: ")
            valor = input("Ingrese el valor de {clave}: ")
            dicc[clave] = valor

        elif opcion == "m":
            clave = int(input("Ingrese clave a modificar: "))
            valor = input("Ingrese nuevo valor: ")
            dicc[clave] = valor

        elif opcion == "e":
            orden = int(input("Que elemento quiere eliminar, ingrese la clave: "))
            dicc.remove(orden)

        elif opcion == "f":
            ingreso_flag = False

    except Exception as err:
        print("Error: ", err)

print("El diccionario final es:")
print(*[f"\n{i} - {dicc[i]}" for i in dicc])
#+end_src

* Ejercicio 5:
Escriba un ejemplo que dispare una excepción, la controle y
muestre el uso de finally.
#+begin_src python

#+end_src
