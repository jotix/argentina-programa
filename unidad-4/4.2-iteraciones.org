#+TITLE: Práctico Nro. 4.2: Iteraciones
#+AUTHOR: Juan Jose Della Vecchia
#+STARTUP: overview

* Ejercicio 1:
Escriba un programa que permita que el usuario ingrese un
número n. El programa debe imprimir los números pares comenzando
desde 0 hasta n.
#+begin_src python
n = int(input("Ingrese un número entero: "))

# versión lambda
pares = list(filter(lambda i: not i & 1, range(n)))
print("Números pares versión lambda:", *pares)

# versión for loop
print("\nNúmeros pares versión ciclo for:")
for i in range(n):
    if not i & 1:
        print(i)
#+end_src

* Ejercicio 2:
Escriba un programa que imprima por pantalla la suma de los
n primeros números naturales.

** versión sin timers
#+begin_src python
n = int(input("Ingrese un número entero: "))

# versión son función sum
print(f"v1- Suma de los primeros {n} números naturales = {sum(range(n+1))}")

# versión con ciclo for
suma = 0
for i in range(1,n+1):
    suma += i

print(f"v2- Suma de los primeros {n} números naturales = {suma}")
#+end_src

** versión con timers
#+begin_src python
import time

n = int(input("Ingrese un número entero: "))

# versión son función sum
inicio_v1 = time.time()
suma_v1 = sum(range(n+1))
print(f"v1- Suma de los primeros {n} números naturales = {suma_v1}")
fin_v1 = time.time()
print("Tiempo de ejecución v1:", fin_v1 - inicio_v1, "segundos")

# versión con ciclo for
inicio_v2 = time.time()
suma_v2 = 0
for i in range(1,n+1):
    suma_v2 += i

print(f"v2- Suma de los primeros {n} números naturales = {suma_v2}")
fin_v2 = time.time()
print("Tiempo de ejecución v2:", fin_v2 - inicio_v2, "segundos")
#+end_src

* Ejercicio 3:
Escriba un programa que muestre por pantalla la tabla de 
multiplicar de un número n ingresado por el usuario.
#+begin_src python
n = int(input("Ingrese un número entero: "))
for i in range(1,11):
    print(f"{n} x {i} = {n*i}")
#+end_src

* Ejercicio 4:
Escriba un programa que permita que el usuario ingrese dos
números n y m. El programa debe imprimir por pantalla los números
entre 0 y m que son divisibles por n.
#+begin_src python
n = int(input("Ingrese un número entero n: "))
m = int(input("Ingrese un número entero m: "))
for i in range(1,m+1):
    if i % n == 0:
        print(i)
#+end_src

* Ejercicio 5:
Escriba un programa que permita que el usuario ingrese n nú-
meros por teclado. El programa debe imprimir el mayor y menor nú-
mero ingresado.
#+begin_src python
n = int(input("Cuantos números va a ingresar? "))
lista = []
for i in range(n):
    lista.append(int(input(f"Ingrese un número:")))

print(f"El menor número ingresado es: {min(lista)}")
print(f"El mayor número ingresado es: {max(lista)}")
#+end_src

* Ejercicio 6:
Escriba un programa que permita que el usuario ingrese nú-
meros por teclado hasta que ingrese un -1. Luego el programa debe
informar la cantidad de números ingresados.
#+begin_src python
n = 0
contador = 0
while n != -1:
    n = int(input("ingrese un número (-1 para terminar): "))
    contador += 1

print(f"Usted ingreso {contador-1} números")
#+end_src

* Ejercicio 7:
Escriba un programa que permita que el usuario ingrese por
teclado un string s. El programa deberá contar la cantidad de vocales
y consonantes que tiene s.
#+begin_src python
lista_vocales = list("aeiou")
lista_consonantes = list("qwrtypsdfghjklñzxcvbnm")

string = input("Ingrese un string: ")
lista_string = list(string)

vocales = list(filter(lambda char: char in lista_vocales, string))
consonantes = list(filter(lambda char: char in lista_consonantes, string))

print("Cantidad de vocales:", len(vocales))
print("Cantidad de consonantes:", len(consonantes))
#+end_src

* Ejercicio 8:
Escriba un programa que permita comprobar si un string es un
palíndromo. Para resolver este ejercicio no realice conversiones.
#+begin_src python
string = input("Ingrese un string: ")
print("La string ingresada", "es" if string == string[::-1] else "no es", "un palíndromo")
#+end_src

* Ejercicio 9:
Escriba un programa que permita que el usuario ingrese n
strings. El programa debe imprimir por pantalla el string de mayor
longitud.
#+begin_src python
n = int(input("Cuantos strings va a ingresar? "))
lista = []
longitudes = []
for i in range(n):
    s = input("Ingrese un string: ")
    lista.append(s)
    longitudes.append(len(s))
    
print("EL string de mayor longitud es:", lista[longitudes.index(max(longitudes))])
#+end_src

* Ejercicio 10:
Escriba un programa que permita que el usuario ingrese dos
strings s0 y s1. El programa debe crear un nuevo string denominado
merge el cual se forma a partir de s0 y s1 de la siguiente manera: primer
carácter de s0, primer carácter de s1, segundo carácter de s0, segundo
carácter de s1 y así siguiendo. Finalmente, el programa imprime s0, s1
y r.
#+begin_src python
s0 = input("Ingrese un string: ")
s1 = input("Ingrese un string: ")
r = ""
for i in range(max([len(s0), len(s1)])):
    if i < len(s0):
        r += s0[i]
    if i < len(s1):
        r += s1[i]

print("String s0: ", s0)
print("String s1: ", s1)
print("String r:  ", r)
#+end_src

* Ejercicio 11:
Escriba un programa que permita que el usuario ingrese por
teclado una lista l. El programa debe crear dos listas la lista vocales y la
lista consonante. En la lista vocales se encuentran todas la vocales que
están en s y en la lista consonante todas las consonantes que están en
s. Luego el programa debe imprimir por pantalla la cantidad de vocales
y la cantidad de consonantes que tiene s.
#+begin_src python
todas_las_vocales = list("aeiou")
todas_las_consonantes = list("qwrtypsdfghjklñzxcvbnm")

vocales_ingresadas = []
consonantes_ingresadas = []

ingreso_flag = True
while ingreso_flag:
    s = input("Ingrese una letra (ingrese 0 para terminar): ")
    if s == "0":
        ingreso_flag = False    
    elif s in todas_las_consonantes:
        consonantes_ingresadas.append(s)
    elif s in todas_las_vocales:
        vocales_ingresadas.append(s)
    else:    
        print("Ese ingreso no cuenta, ingrese una LETRA!")

print(f"Vocales ingresadas: {vocales_ingresadas} / Total {len(vocales_ingresadas)}")
print(f"Consonantes ingresadas: {consonantes_ingresadas} / Total {len(consonantes_ingresadas)}")
#+end_src

* Ejercicio 12:
Escriba un programa que permita que el usuario ingrese por
teclado una lista de strings. El programa retorna como resultado la
misma lista pero con los strings invertidos.
#+begin_src python
lista = []
ingreso_flag = True
while ingreso_flag:
    s = input("Ingrese un string (ingrese fin para terminar): ")
    if s == "fin":
        ingreso_flag = False
    else:
        lista.append(s)

lista_resultado = list(map(lambda string: string[::-1], lista))
print ("Lista resultado:", lista_resultado)
#+end_src

* Ejercicio 13:
Escriba un programa que permita que el usuario ingrese una
lista l de números. El programa debe informar si la lista l contiene más
números positivos que negativos o más números negativos que positivos
o contiene la misma cantidad de números positivos que negativos.
#+begin_src python
lista = []
ingreso_flag = True
while ingreso_flag:
    n = input("Ingrese un número (ingrese fin para terminar): ")
    if n == "fin":
        ingreso_flag = False
    else:
        lista.append(int(n))

negativos = len(list(filter(lambda n: n < 0, lista)))
positivos = len(list(filter(lambda n: n > 0, lista)))

if negativos == positivos:
    mensaje = "la misma cantidad de positivos y negativos"
elif negativos > positivos:
    mensaje = "mas negativos que positivos"
else:
    mensaje = "mas positivos que negativos"

print(f"La lista contiene {mensaje}")
#+end_src

* Ejercicio 14:
Escriba un programa que permita que el usuario ingrese una
lista de elementos. El programa debe informar la cantidad de números
y strings que contiene la lista.
#+begin_src python
lista = []
ingreso_flag = True
while ingreso_flag:
    elem = input("Ingrese un número o una string (ingrese * para terminar): ")
    if elem == "*":
        ingreso_flag = False
    else:
        lista.append(elem)

numeros = []
strings = []
for i in range(len(lista)):
    if lista[i].replace('.','',1).replace('-','',1).isdigit():
        numeros.append(lista[i])
    else:
        strings.append(lista[i])

print(f"Números ingresados:\n{numeros} / TOTAL: {len(numeros)}")
print(f"Strings ingresadas:\n{strings} / TOTAL: {len(strings)}")
#+end_src

* Ejercicio 15:
Escriba un programa que permita almacenar una lista de
mercaderías. Los datos requeridos por cada mercadería son: nombre
y precio. Dichos datos se almacenan en una tupla donde la primera
componente es el nombre de la mercadería y la segunda componente
es el precio. El programa debe permitir ingresar mercadería a la lista
hasta que el usuario ingrese por teclado un *. Luego el programa debe
imprimir por pantalla la lista de mercaderías ingresadas.
#+begin_src python
lista = []
ingreso_flag = True
while ingreso_flag:
    art = input("Ingrese el nombre del artículo: (ingrese * para terminar): ")
    if art == "*":
        ingreso_flag = False
    else:
        precio = float(input("Ingrese el precio: "))
        lista.append((art, precio))

linea = "+--------------------+------------+"
print(f"{linea}\n|     ARTÍCULO       |   PRECIO   |\n{linea}")
for merc in lista:
    print("| {:<18} | $ {:>8.2f} |".format(merc[0], merc[1]))

print(linea)
#+end_src

* Ejercicio 16:
Escriba un programa que permita registrar en una lista de tuplas
las materias y las notas que un alumno obtuvo durante un trimestre.
Luego el programa debe calcular el promedio general del trimestre
ingresado.
#+begin_src python
lista = []
ingreso_flag = True
while ingreso_flag:
    materia = input("Ingrese la materia: (ingrese * para terminar): ")
    if materia == "*":
        ingreso_flag = False
    else:
        nota = float(input("Ingrese la nota: "))
        lista.append((materia, nota))

suma = 0
for elem in lista:
    suma += elem[1]

promedio = suma / len(lista)
print("El promedio del alumno es:", promedio)
#+end_src

* Ejercicio 17:
Escriba un programa que defina un diccionario cuya clave es
un número y cuyo valor es una lista de tuplas como la del ejercicio
anterior. El programa debe crear un diccionario con tres pares clave:
valor. El primero para el primer trimestre, el segundo para el segundo
trimestre y el tercero para el tercer trimestre. Luego el programa debe
informar el promedio general del alumno.
#+begin_src python
dicc = {}
tri = ["primer", "segundo", "tercer"]
for i in range(3):
    print(f"- Ingresando las notas para el {tri[i]} trimestre:")
    dicc[i+1] = []
    ingreso_flag = True
    while ingreso_flag:
        s = input("Ingrese la materia: (ingrese * para terminar): ")
        if s == "*":
            ingreso_flag = False
        else:
            n = float(input("Ingrese la nota: "))
            dicc[i+1].append((s, n))

suma = 0
contador = 0
for trimestre in dicc:
    for materia in dicc[trimestre]:
        suma += materia[1]
        contador += 1

promedio = suma / contador
print("El promedio del alumno es:", promedio)
#+end_src

* Ejercicio 18:
Cree un diccionario cuya clave sea un string y cuyo valor una
lista de números. Luego realice las siguientes actividades:
Imprima las claves.
Imprima los valores.
#+begin_src python

#+end_src

* Ejercicio 19:
Cree un diccionario cuya clave sea un número y cuyo valor
sea un string. Tanto la clave como el valor son requeridos al usuario.
Luego el diccionario debe imprimir la clave que tenga como valor el
string más largo.
#+begin_src python

#+end_src

* Ejercicio 20:
Represente los datos de una persona con un diccionario. Los
datos requeridos por personas son: dni, nombre, edad, domicilio, trabajos.
Por cada dato de una persona elija el tipo de dato más apropiado
con excepción de los trabajos dado que una persona puede tener más
de un trabajo entonces los mismos se representan con una tupla. Luego
cree una lista de personas las cuales son ingresadas por el usuario.
Posteriormente pida al usuario un número de dni e imprima los datos
correspondiente a la persona que tenga el dni ingresado por el usuario.
#+begin_src python

#+end_src
