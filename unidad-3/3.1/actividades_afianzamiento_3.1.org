#+TITLE: Práctico Nro. 3.1: Tipos de Dato Colección - Tuplas
#+AUTHOR: Juan Jose Della Vecchia
#+PROPERTY: header-args+ :mkdirp yes
#+STARTUP: overview

Nota: Asuma una cantidad especíca de elementos cuando el ejercicio no lo
especique.

* Ejercicio 1:
Realice las siguientes actividades:
1. Defina una dupla d donde los elementos están inicializados en 0.
2. Defina una tupla de un único elemento.
3. Defina una tupla con n elementos inicializados en 0.
#+begin_src python :tangle ./ejercicios/01.py

#+end_src
* Ejercicio 2:
Defina las duplas op0 y op1 y luego construya la tupla r cuyos
elementos son la suma de los elementos de op0 y op1.
Ejemplo: Si op0=(10,20) y op1=(8,20) la tupla r tiene que contener
r=(18,40).
#+begin_src python :tangle ./ejercicios/02.py

#+end_src
* Ejercicio 3:
Escriba un ejemplo que muestre que las tuplas son inmutables.
#+begin_src python :tangle ./ejercicios/03.py

#+end_src
* Ejercicio 4:
Escriba un programa que dada una tupla t con 5 elementos y
un número n produzca como resultado una nueva tupla con todos los
elementos de la tupla t multiplicados por el número n.
#+begin_src python :tangle ./ejercicios/04.py

 #+end_src
* Ejercicio 5:
Escriba un programa que almacene el valor de tres variables
ingresadas por el usuario en una tupla
#+begin_src python :tangle ./ejercicios/05.py

 #+end_src
* Ejercicio 6:
Escriba un programa que:
1. Permita que el usuario ingrese cuatro números, los almacene una
tupla t.
2. Genere una tupla s la cual se obtiene sumando a cada elemento
de t un valor ingresado por el usuario.
3. Genere una tupla r la cual se obtiene restando a cada elemento de
t un valor ingresado por el usuario.
4. Imprima: con leyendas adecuadas la tupla t, s y r.
#+begin_src python :tangle ./ejercicios/06.py

#+end_src
* Ejercicio 7:
Defina una tupla y muestre:
1. 3⁄4Cómo se accede a un elemento de la tupla?
2. 3⁄4Qué sucede si se intenta acceder a una posición inexistente de la
tupla?
3. 3⁄4Cómo se calcula la longitud de una tupla?
#+begin_src python :tangle ./ejercicios/07.py

#+end_src   
* Ejercicio 8:
Construya un programa que permita que el usuario ingrese una
dupla y luego desempaquete la tupla en dos variables a y b. Luego el
programa debe imprimir las variables a y b.
#+begin_src python :tangle ./ejercicios/08.py

#+end_src
* Ejercicio 9:
Escriba un programa que permite que el usuario ingrese dos
valores en las variables a y b y luego empaquete dichos valores en una
tupla. Finalmente, el programa debe imprimir la tupla resultado.
#+begin_src python :tangle ./ejercicios/09.py

#+end_src
* Ejercicio 10:
Escriba un programa que permite que el usuario ingrese un
número a y una tupla t. Luego el programa debe imprimir True si el
número a está en t y False en otro caso.
#+begin_src python :tangle ./ejercicios/10.py

#+end_src
* Ejercicio 11:
Escriba un programa que permita que el usuario ingrese un
número a y una tupla t. Luego el programa debe imprimir por pantalla
la posición del número a en la tupla t. En caso de que el número a no
se encuentre en t el programa debe imprimir -1.
#+begin_src python :tangle ./ejercicios/11.py

#+end_src
* Ejercicio 12:
Realice las siguientes actividades:
1. Explique el concepto de rodaja.
2. Explique el concepto de zancada.
3. Por cada concepto explicado de ejemplos.
#+begin_src python :tangle ./ejercicios/12.py

#+end_src   
* Ejercicio 13:
Escriba un programa que permita que el usuario ingrese un
número a y una tupla t. Luego el programa debe mostrar por pantalla
la cantidad de veces que aparece el número a en la tupla t.
#+begin_src python :tangle ./ejercicios/13.py

#+end_src
* Ejercicio 14:
Escriba un programa que permita que el usuario ingrese una
tupla t y un elemento e. El programa debe informar si e está en la tupla
t.
#+begin_src python :tangle ./ejercicios/14.py

#+end_src
* Ejercicio 15:
Escriba un programa que permita que el usuario ingrese una
tupla t y un elemento e. El programa debe informar si e no está en t.
#+begin_src python :tangle ./ejercicios/15.py

#+end_src
* Ejercicio 16:
Escriba un programa que permita que el usuario ingrese dos
tuplas t y r. El programa debe imprimir por pantalla la concatenación
de t y r.
#+begin_src python :tangle ./ejercicios/16.py

#+end_src
* Ejercicio 17:
Escriba un programa que:
1. Permita que el usuario ingrese una tupla t de cinco números.
2. Sume los números pares.
3. Sume los números impares.
#+begin_src python :tangle ./ejercicios/17.py

#+end_src   
