#+TITLE: Práctico Nro.3.1: Tipos de Dato Colección - Tuplas
#+AUTHOR: Juan Jose Della Vecchia
#+STARTUP: overview

Nota: Asuma una cantidad especíca de elementos cuando el ejercicio no lo
especique.

* Ejercicio 1:
Realice las siguientes actividades:
1. Defina una dupla d donde los elementos están inicializados en 0.
2. Defina una tupla de un único elemento.
3. Defina una tupla con n elementos inicializados en 0.
#+begin_src python
  dupla = (0, 0)
  dupla_unica = (0,)
  n = 5
  dupla_n = (0,) * n
  print(dupla)
  print(dupla_unica)
  print(dupla_n)
#+end_src

* Ejercicio 2:
Defina las duplas op0 y op1 y luego construya la tupla r cuyos
elementos son la suma de los elementos de op0 y op1.
Ejemplo: Si op0=(10,20) y op1=(8,20) la tupla r tiene que contener
r=(18,40).
#+begin_src python
  op0=(10,20)
  op1=(8,20)
  r=(op0[0]+op1[0], op0[1]+op1[1])
  print("Tupla 0:", op0)
  print("Tupla 1:", op1)
  print("Suma: ", r)
#+end_src

* Ejercicio 3:
Escriba un ejemplo que muestre que las tuplas son inmutables.
#+begin_src python
  lista = [1, 2]
  print(id(lista))
  lista.append(2)
  print(id(lista))
  tupla = (1, 2)
  print(id(tupla))
  tupla = (2, 4)
  print(id(tupla))
#+end_src

* Ejercicio 4:
Escriba un programa que dada una tupla t con 5 elementos y
un número n produzca como resultado una nueva tupla con todos los
elementos de la tupla t multiplicados por el número n.
#+begin_src python
  var1 = input("ingrese el primer elemento de la tupla: ")
  var2 = input("ingrese el segundo elemento de la tupla: ")
  var3 = input("ingrese el tercer elemento de la tupla: ")
  tupla = (var1, var2, var3)
  print(tupla)
#+end_src

* Ejercicio 5:
Escriba un programa que almacene el valor de tres variables
ingresadas por el usuario en una tupla
#+begin_src python
  var1 = input("ingrese la primer variable: ")
  var2 = input("ingrese la segunda variable: ")
  var3 = input("ingrese la tercer variable: ")
  tupla = (var1, var2, var3)
  print(tupla)
#+end_src

* Ejercicio 6:
Escriba un programa que:
1. Permita que el usuario ingrese cuatro números, los almacene una
tupla t.
2. Genere una tupla s la cual se obtiene sumando a cada elemento
de t un valor ingresado por el usuario.
3. Genere una tupla r la cual se obtiene restando a cada elemento de
t un valor ingresado por el usuario.
4. Imprima: con leyendas adecuadas la tupla t, s y r.
#+begin_src python
  t = tuple(list([int(input("Ingrese elemento: ")) for i in range(4)]))
  elem_a_sumar = int(input("Ingrese elemento a sumar: "))
  elem_a_restar = int(input("Ingrese elemento a restar: "))
  s = tuple(map(lambda elem: elem + elem_a_sumar, t))
  r = tuple(map(lambda elem: elem - elem_a_restar, t))
  print("original:", t)
  print("elem a sumar:", elem_a_sumar)
  print("elem a restar:", elem_a_restar)
  print("tupla sumada:", s)
  print("tupla restada:", r)
#+end_src

* Ejercicio 7:
Defina una tupla y muestre:
1. Cómo se accede a un elemento de la tupla?
2. Qué sucede si se intenta acceder a una posición inexistente de la
tupla?
3. Cómo se calcula la longitud de una tupla?
#+begin_src python
  tupla = (1, 1, 2, 3, 5, 8, 13)
  print("La tupla es:", tupla)
  print("El 5to elemento de la lista es:", tupla[5])
  print("La longitud de la lista es:", len(tupla))
  try:
    print(tupla[10])
  except Exception as e:
    print("Intentar acceder a una posición inexistente de la tupla da el error:", e)
#+end_src

* Ejercicio 8:
Construya un programa que permita que el usuario ingrese una
dupla y luego desempaquete la tupla en dos variables a y b. Luego el
programa debe imprimir las variables a y b.
#+begin_src python
  aux = input("ingrese un dupla, separe los elementos con una coma: ")
  tupla = tuple(aux.split(","))
  a = tupla[0]
  b = tupla[1]
  print("el elemento a de la tupla es:", a)
  print("el elemento b de la tupla es:", b)
#+end_src

* Ejercicio 9:
Escriba un programa que permite que el usuario ingrese dos
valores en las variables a y b y luego empaquete dichos valores en una
tupla. Finalmente, el programa debe imprimir la tupla resultado.
#+begin_src python
  a = input("Ingrese el valor de la variable a: ")
  b = input("Ingrese el valor de la variable b: ")
  tupla = (a, b)
  print("La tupla resultante es:", tupla)
#+end_src

* Ejercicio 10
Escriba un programa que permite que el usuario ingrese un
número a y una tupla t. Luego el programa debe imprimir True si el
número a está en t y False en otro caso.
#+begin_src python
  a = int(input("Ingrese un número entero: "))
  ingreso = input("Ingrese una tupla de enteros, separe elementos con comas: ")
  tupla = tuple(list(map(lambda elem: int(elem), ingreso.split(","))))
  print(a in tupla)
#+end_src

* Ejercicio 11:
Escriba un programa que permita que el usuario ingrese un
número a y una tupla t. Luego el programa debe imprimir por pantalla
la posición del número a en la tupla t. En caso de que el número a no
se encuentre en t el programa debe imprimir -1.
#+begin_src python
  a = int(input("Ingrese un número entero: "))
  aux = input("Ingrese una lista de enteros separados por comas: ")
  t = tuple(map(lambda elem: int(elem), aux.split(",")))
  print("El indice del elemento es:", t.index(a) if a in t else -1 ,"(-1 indica que no existe en la tupla)")
#+end_src

* Ejercicio 12:
Realice las siguientes actividades:
1. Explique el concepto de rodaja.
2. Explique el concepto de zancada.
3. Por cada concepto explicado de ejemplos.
#+begin_src python
  tupla = (1, 1, 2, 3, 5, 8, 13)
  print("Tupla definida:", tupla)
  print("Rodaja tupla[2:4]:", tupla[2:4])
  print("Rodaja tupla[4:]:", tupla[4:])
  print("Rodaja tupla[:2]:", tupla[:2])
#+end_src

* Ejercicio 13:
Escriba un programa que permita que el usuario ingrese un
número a y una tupla t. Luego el programa debe mostrar por pantalla
la cantidad de veces que aparece el número a en la tupla t.
#+begin_src python
  a = int(input("Ingrese un numero entero: "))
  aux = input("ingrese una tupla, separe los elementos con comas: ")
  t = tuple(map(lambda elem: int(elem), aux.split(",")))
  repeticiones = t.count(a)
  glue = "no aparece" if repeticiones == 0 else ("aparece 1 vez" if repeticiones == 1 else "aparece "+str(repeticiones)+" veces")
  print("El elemento", a, glue, "en", t)
#+end_src

* Ejercicio 14:
Escriba un programa que permita que el usuario ingrese una
tupla t y un elemento e. El programa debe informar si e está en la tupla
t.
#+begin_src python
  aux = input("ingrese una tupla, separe los elementos con comas: ")
  t = tuple(aux.split(","))
  e = input("Ingrese un elemento a buscar: ")
  print(f"El elemento {e} {'' if e in t else 'no '}esta en {t}")
#+end_src

* Ejercicio 15:
Escriba un programa que permita que el usuario ingrese una
tupla t y un elemento e. El programa debe informar si e no está en t.
#+begin_src python
  aux = input("ingrese una tupla, separe los elementos con comas: ")
  t = tuple(aux.split(","))
  e = input("Ingrese un elemento a buscar: ")
  print(f"El elemento {e} {'' if e in t else 'no '}esta en {t}")
#+end_src

* Ejercicio 16:
Escriba un programa que permita que el usuario ingrese dos
tuplas t y r. El programa debe imprimir por pantalla la concatenación
de t y r.
#+begin_src python
  t_temp = input("Ingrese la tupla t, separe los elementos con comas: ")
  r_temp = input("Ingrese la tupla r, separe los elementos con comas: ")
  t = tuple(t_temp.split(","))
  r = tuple(r_temp.split(","))
  print("Tupla t:", t)
  print("Tupla r:", r)
  tupla_concatenada = t + r
  print("Tuplas concatenadas:", tupla_concatenada)
#+end_src

* Ejercicio 17:
Escriba un programa que:
1. Permita que el usuario ingrese una tupla t de cinco números.
2. Sume los números pares.
3. Sume los números impares.
#+begin_src python
  tupla = tuple(list([int(input("Ingrese elemento: ")) for i in range(5)]))
  impares = list(filter(lambda el: el & 1, tupla))
  pares = list(filter(lambda el: not el & 1, tupla))
  print("Impares:", impares, "suma", sum(impares))
  print("pares:", pares, "suma", sum(pares))
#+end_src
